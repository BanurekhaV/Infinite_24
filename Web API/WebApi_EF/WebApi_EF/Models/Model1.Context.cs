//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi_EF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrainingDBEntities : DbContext
    {
        public TrainingDBEntities()
            : base("name=TrainingDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DEPT> DEPTs { get; set; }
        public virtual DbSet<EMP> EMPs { get; set; }
        public virtual DbSet<EmpDummy> EmpDummies { get; set; }
        public virtual DbSet<EmpDummy1> EmpDummy1 { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductSale> ProductSales { get; set; }
        public virtual DbSet<tblDepartment> tblDepartments { get; set; }
        public virtual DbSet<tblEmployee> tblEmployees { get; set; }
        public virtual DbSet<dummy> dummies { get; set; }
        public virtual DbSet<ErrorLogger> ErrorLoggers { get; set; }
        public virtual DbSet<table1> table1 { get; set; }
        public virtual DbSet<table2> table2 { get; set; }
    
        [DbFunction("TrainingDBEntities", "fn_deptwiseEmp")]
        public virtual IQueryable<fn_deptwiseEmp_Result> fn_deptwiseEmp(Nullable<int> deptid)
        {
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_deptwiseEmp_Result>("[TrainingDBEntities].[fn_deptwiseEmp](@deptid)", deptidParameter);
        }
    
        [DbFunction("TrainingDBEntities", "fn_Empdetails")]
        public virtual IQueryable<fn_Empdetails_Result> fn_Empdetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Empdetails_Result>("[TrainingDBEntities].[fn_Empdetails]()");
        }
    
        public virtual int EmpCount(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpCount", idParameter);
        }
    
        public virtual int EmpIns(Nullable<int> eid, string ename, string ph)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpIns", eidParameter, enameParameter, phParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> ErrProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("ErrProc");
        }
    
        public virtual int ExLog(string exmsg, string extype, string exsrc, string exurl)
        {
            var exmsgParameter = exmsg != null ?
                new ObjectParameter("exmsg", exmsg) :
                new ObjectParameter("exmsg", typeof(string));
    
            var extypeParameter = extype != null ?
                new ObjectParameter("extype", extype) :
                new ObjectParameter("extype", typeof(string));
    
            var exsrcParameter = exsrc != null ?
                new ObjectParameter("exsrc", exsrc) :
                new ObjectParameter("exsrc", typeof(string));
    
            var exurlParameter = exurl != null ?
                new ObjectParameter("exurl", exurl) :
                new ObjectParameter("exurl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExLog", exmsgParameter, extypeParameter, exsrcParameter, exurlParameter);
        }
    
        public virtual int getEmpSalary(string ename, ObjectParameter sal)
        {
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getEmpSalary", enameParameter, sal);
        }
    
        public virtual int GetEmpSalnDept(string ename, ObjectParameter sal, ObjectParameter deptid)
        {
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEmpSalnDept", enameParameter, sal, deptid);
        }
    
        public virtual ObjectResult<getGendept_Result> getGendept(Nullable<int> deptno, string gen)
        {
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getGendept_Result>("getGendept", deptnoParameter, genParameter);
        }
    
        public virtual ObjectResult<string> getname(Nullable<int> eid)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getname", eidParameter);
        }
    
        public virtual ObjectResult<getSal_Result> getSal(Nullable<int> eid)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSal_Result>("getSal", eidParameter);
        }
    
        public virtual ObjectResult<prcsecond_Result> prcsecond()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcsecond_Result>("prcsecond");
        }
    
        public virtual ObjectResult<string> prwish()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prwish");
        }
    
        public virtual int Sales(Nullable<int> pid, Nullable<int> qty_to_sell)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var qty_to_sellParameter = qty_to_sell.HasValue ?
                new ObjectParameter("qty_to_sell", qty_to_sell) :
                new ObjectParameter("qty_to_sell", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sales", pidParameter, qty_to_sellParameter);
        }
    
        public virtual ObjectResult<spGetProductByName_Result> spGetProductByName(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetProductByName_Result>("spGetProductByName", productNameParameter);
        }
    
        public virtual ObjectResult<spGetProducts_Result> spGetProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetProducts_Result>("spGetProducts");
        }
    
        public virtual int TaxCalculator(Nullable<int> eid, ObjectParameter annualsal)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaxCalculator", eidParameter, annualsal);
        }
    
        public virtual int UpdDept()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdDept");
        }
    
        public virtual int updsal(Nullable<int> increment, Nullable<int> eid)
        {
            var incrementParameter = increment.HasValue ?
                new ObjectParameter("increment", increment) :
                new ObjectParameter("increment", typeof(int));
    
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updsal", incrementParameter, eidParameter);
        }
    }
}
