--triggers
 --eg 1
 create or alter trigger trgInsertEmp
 on tblemployee
 for insert
 as
 begin
 select * from tblemployee
  select * from inserted  -- to understand that insertion is first happening in the inserted table  end
end
  --now when we insert into tblemployee the above trigger fires

  insert into tblEmployee values(118,'Yuvraj','Male',6750,3,190807,'Hyderabad')


create trigger trgUpdateEmp
on tblemployee
for update 
as
begin
select * from deleted
select * from inserted
end

select * from tblemployee

update tblEmployee set gender='Male' where EmpId=114

--let us create an audit table to track the events

create table EmployeeAudit(Message varchar(max))

create or alter trigger trgAuditInsert
on tblemployee for insert
as
begin
declare @id int
select @id=empid from inserted

insert into EmployeeAudit
values('New Employee with ID ' + ' '+cast(@id as varchar(5))+ ' is added at '
+cast(getdate()as nvarchar(15)))
end

--
insert into tblemployee values(120,'Sanjeev','Male',6900,1,7665544,'Chennai')

select * from employeeAudit

--create a delete trigger on tblemployee, which adds a row of 
--the deleted record in the audit table
create table EmployeeAudit(Message varchar(max))

create or alter trigger trgAuditDelete
on tblemployee for delete
as
begin
declare @id int
declare @ename varchar(25)
select @id=empid from deleted
select @ename=empname from deleted

insert into EmployeeAudit
values('Employee with ID ' + ' '+cast(@id as varchar(5))+ ' named '+ ' '+@ename+
' is deleted at '
+cast(getdate()as nvarchar(15)))
end

delete from tblEmployee where empid=200

--let us add a column to employeeaudit table
alter table employeeaudit
add AuditDate date

create or alter trigger trg_update_emp
on tblemployee
for update
as
begin
 --declare variables to hold old data
 declare @id int
 declare @oldname varchar(25),@newname varchar(100)
 declare @oldsalary float,@newsalary float
 declare @olddeptid int, @newdeptid int

 --declare a variable to build the audit string
 declare @auditdata varchar(max)
 --store the newly updated data into a temp table ('#') or use inserted table
 select * into #updatedtempdata from inserted

 --loop thru all the updated records incase we have updated many rows
 while(exists(select EmpId from #updatedtempdata))
  begin
   set @auditdata=' '

   --select the first row of tempdata when many rows were updated
   select top 1 @Id=empid, @newname=empname,
   @newsalary=salary,@newdeptid=deptid from #updatedtempdata

   --select the deleted data
   select @oldname=empname,
   @oldsalary=salary,
   @olddeptid=deptid from deleted where empid=@id

   set @auditdata='Employee with Id = '+cast(@id as varchar(5)) + ' changed' 
   --if old name and new name are not same then the data is updated
   if(@oldname <> @newname)
    begin
	 set @auditdata=@auditdata + ' Name from '+ @oldname + ' to '+@newname
	 end
--salary changes are recorded
 if(@oldsalary <> @newsalary)
  begin
   set @auditdata=@auditdata + ' Salary from '+ cast(@oldsalary as varchar(10)) +
   ' to ' +cast(@newsalary as varchar(10))
   end

   --dept changes are updated 
   if(@olddeptid <> @newdeptid)
   begin
    set @auditdata=@auditdata + ' Department from ' + cast(@olddeptid as varchar(5)) +
	 ' to ' +cast(@newdeptid as varchar(5))
	 end

	 -- the entire auditdata will now be added to employeeaudit table
	 insert into employeeaudit(Message,Auditdate) values(@auditdata,getdate())

	 --we need to delete the first row afterrecording changes
	 --so that the second row can be top 1
	 delete from #updatedtempdata where empid=@id

	 end
	end

	select * from tblemployee

	update tblemployee set empname='Sahana',gender='Female'
	where empid=111

	select * from employeeaudit


update tblemployee set deptid=1 where deptid in(4,5)

	select * from employeeaudit

	--instead of triggers
	--eg 1
	create or alter trigger trg_instead_ofinsert
	on tbldepartment
	instead of insert,update,delete	
	as
	begin
	select 'Permission denied --contact Admin'
	end
	

	select * from tbldepartment
	select * from tblEmployee

	insert into tbldepartment values(7,'Quality','Delhi',null)
	delete from tblDepartment where deptid=6
	update tblDepartment set deptname='Accounts' where deptid=6
	
	--eg 2
	--let us try to insert a row thru a view as below
	create view veEmpadd
	as
	select empid,empname,gender,salary,phone,d.deptname 
	from tblemployee e join tbldepartment d
	on e.deptid=d.deptid

	--now let us insert one record into the view

	insert into veempadd values(300,'Banurekha','Female',6750,1010101,'Admin')

/*	Msg 4405, Level 16, State 1, Line 156
View or function 'veempadd' is not updatable because the modification affects multiple base tables.*/

	--we can use instead of triggers to over come the above error on insert
	--we are creating a trigger on the view

	create or alter trigger trig_onView
	on veempadd
	instead of insert
	as
	begin
	 declare @departmentid int

	 --first let us check if there is a valid dept id for the given dept name in the 
	 --insert clause above  ('IT')
	 set @departmentid=(select deptid from tbldepartment d , inserted 
	 where inserted.deptname=d.DeptName)
	 select @departmentid

	 --let us now check if @departmentid is having valid id or null
	 if(@departmentid is null)
	  begin
	   raiserror('Invalid Department Name. Statement Terminated',16,1)
	   return
	  end

	  --if @departmentid is valid, then do the insertion into the base table
	  insert into tblEmployee(empid,empname,gender,salary,deptid,phone)
	 select empid,empname,gender,salary,@departmentid,phone from inserted
	 end

	 --now let us try inserting one row into the view
	 insert into veempadd values(200,'Banurekha','Female',6750,'IT',1010101)

	 select * from tblemployee

	 --DDL triggers
	 --Database scopped

	 create database dummy
	 use dummy
	 go

	 create or alter trigger trg_restrict_create_table
	 on database 
	 for create_table
	 as
	 begin
	  print 'Welcome to creating Tables in this Database'
	  commit transaction
	  end


	  create table dummy_dummy(did int,dname varchar(10))

	  --server scoped DDL trigger
	  create trigger trg_restrict_all
	  on all server
	  for create_table,alter_table,drop_table
	  as
	   begin
	    print ' You cannot create.alter,drop any table in any database of this server'
		rollback transaction
		end



	--dropping a database trigger 
	drop trigger if exists trg_restrict_create_table on database

	--dropping a server scoped trigger
	drop trigger if exists trg_restrict_all on all server

	
set implicit_transactions off- to enable/diable autocommit mode

begin tran
delete from tblDepartment where deptid=6
rollback
select * from tblDepartment

insert into tblDepartment values(6,'Accounts',null,null)