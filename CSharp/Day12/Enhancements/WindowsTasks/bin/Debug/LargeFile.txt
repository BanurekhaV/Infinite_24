fadyshkjl;'v;l[0poyf8eihsn "DKjfbvyjadSUilb dvhofkcp'dlf bdlvf;m c

Enhancements :
- Lambda Expressions
- Query Expression
- Literal Improvements
- Dictionary Initilializers
- Expression Bodied member
- Exception Filters
- Local Function
    - Some Piece of code within a function, that can be called again and again within the parent function
    - Cannot overload a local function
    - No access modifiers such as public ,private, protected etc, allowed
    - Compiler will issue a warning if the local function is not called/used by the Parent function
    - All Varibales of the enclosing scope, including local variables can be accessed by the local function
 - Throws : is a keyword that helps ro throw an exception within an expression

-Task : Tasks are a way to implement asynchronous programming. The task object is typically executed asynchronously on a thread pool than synchronously on the main thread.
 A task scheduler will be responsible to start and manage the task. This is the one, that uses the thread from pool to execute the task
 It makes the application more responsive

TPL : Task Parallel Library, as set of public types and API's in the System.Threading and Threading.Tasks namespaces

Parallel Programming : is a type of programming in which many execution of process, calculations are carried out simultaneously

We need to ensure that Tasks are independent of each other (order of execution does not matter)

Tasks                 vs              Threads
Tasks represents asyn. operations     Represents flow of work
Tasks can return results              Cannot directly return any results
Task can have multiple cores          Threads can have only one task at a time

We implement parallel programming using 'async' and 'await'
Task can be said 'that they are higher level concept than a thread'
Enhancements :
- Lambda Expressions
- Query Expression
- Literal Improvements
- Dictionary Initilializers
- Expression Bodied member
- Exception Filters
- Local Function
    - Some Piece of code within a function, that can be called again and again within the parent function
    - Cannot overload a local function
    - No access modifiers such as public ,private, protected etc, allowed
    - Compiler will issue a warning if the local function is not called/used by the Parent function
    - All Varibales of the enclosing scope, including local variables can be accessed by the local function
 - Throws : is a keyword that helps ro throw an exception within an expression

-Task : Tasks are a way to implement asynchronous programming. The task object is typically executed asynchronously on a thread pool than synchronously on the main thread.
 A task scheduler will be responsible to start and manage the task. This is the one, that uses the thread from pool to execute the task
 It makes the application more responsive

TPL : Task Parallel Library, as set of public types and API's in the System.Threading and Threading.Tasks namespaces

Parallel Programming : is a type of programming in which many execution of process, calculations are carried out simultaneously

We need to ensure that Tasks are independent of each other (order of execution does not matter)

Tasks                 vs              Threads
Tasks represents asyn. operations     Represents flow of work
Tasks can return results              Cannot directly return any results
Task can have multiple cores          Threads can have only one task at a time

We implement parallel programming using 'async' and 'await'
Task can be said 'that they are higher level concept than a thread'





